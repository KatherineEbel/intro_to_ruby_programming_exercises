Question 1: Use the each method of Array to iterate over [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], and print out each value.

answer: iterate1.rb

Question 2: Same as above, but only print out values greater than 5.

answer: print_greater_than_5.rb

Question 3: Now, using the same array from #2, use the select method to extract all odd numbers into a new array.
answer: odd.rb

Question 4: Append "11" to the end of the original array. Prepend "0" to the beginning.
answer: modify_array.rb

Question 5: Get rid of "11". And append a "3".
answer: modify_array.rb
Question 6: Get rid of duplicates without specifically removing any one value.
answer: modify_array.rb

Question 7: What's the major difference between an Array and a Hash?
answer: Hashes are stored with key value pairs, and a referenced by keys. Arrays or stored by index.

Question 8: Create a Hash using both Ruby syntax styles.
answer: create_hash.rb

Question 9: Suppose you have a hash h = {a:1, b:2, c:3, d:4}...
answer: accessing_hash_values.rb

Question 10: Can hash values be arrays? Can you have an array of hashes? (give examples)
answer: yes, yes
        hash = {brothers: ['bill', 'dave', 'chris', 'chuck']}
        array = [{mom: "Mary"}, {dad: "Richard"}, {daughter: "Sydney"}]

Question 11: Look at several Rails/Ruby online API sources and say which one you like best and why.
answer: I like using the Dash App on my mac for all of my api sources

Question 12: Given the following data structures. Write a program that moves the information from the array into the empty hash that applies to the correct person.
answer: array_to_hash.rb

Question 13: Using the hash you created from the previous exercise, demonstrate how you would access Joe's email and Sally's phone number?
answer: array_to_hash.rb

Question 14: In exercise 12, we manually set the contacts hash values one by one. Now, programmatically loop or iterate over the contacts hash from exercise 12, and populate the associated data from the contact_data array. Hint: you will probably need to iterate over ([:email, :address, :phone]), and some helpful methods might be the Array shift and first methods.
answer: array_to_hash.rb

Question 15: Use Ruby's Array method delete_if and String method start_with? to delete all of the words that begin with an "s" in the following array.
answer: delete_s.rb

Question 16: Take the following array:... and turn it into a new array that consists of strings containing one word. (ex. ["white snow", etc...] â†’ ["white", "snow", etc...]. Look into using Array's map and flatten methods, as well as String's split method.
answer: single_strings.rb

Question 17: What will the following program output?
answer: They are the same even though they are created with different syntax, the key / values map to the same values in both.
